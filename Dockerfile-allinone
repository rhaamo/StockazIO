FROM node:18-alpine3.16 as builder-front

RUN apk add --update --no-cache yarn python3 make gcc g++ \
    && rm -rf /var/cache/apk/*

ADD ./front/ /front/

ENV NODE_OPTIONS=--openssl-legacy-provider

RUN \
    echo 'building frontend' && \
    cd /front/ && \
    yarn install && \
    yarn build

FROM alpine:3.16 as builder-backend

RUN \
    echo 'installing dependencies' && \
    apk add --no-cache \
    bash \
    git \
    musl-dev \
    gcc \
    rust cargo \
    libffi libffi-dev \
    postgresql-dev \
    python3-dev \
    python3 \
    py3-pip \
    py3-psycopg2 \
    make \
    zlib-dev \
    jpeg-dev \
    libmagic \
    && \
    ln -s /usr/bin/python3 /usr/bin/python

ADD ./api/ /app/api/
ADD ./setup-data/ /app/setup-data/

# hack around https://github.com/pypa/pip/issues/6158#issuecomment-456619072
ENV PIP_DOWNLOAD_CACHE=/noop/
RUN \
    echo 'installing pip requirements' && \
    pip3 install --upgrade pip && \
    pip3 install setuptools wheel && \
    sed -i 's/six==.*$//' /app/api/requirements.txt && \
    pip3 install --ignore-installed -r /app/api/requirements.txt && \
    rm -rf $PIP_DOWNLOAD_CACHE

COPY --from=builder-front /front/dist /app/front

RUN mkdir /uploads /statics
VOLUME /uploads
VOLUME /statics

EXPOSE 8000
WORKDIR /app/api/
ENTRYPOINT ["./docker/entrypoint.sh"]
CMD ["./docker/server.sh"]
